networks:
  default:
    ipam:
      config:
      - subnet: 172.29.0.0/16
      driver: default
services:
  app-1:
    env_file: .env
    image: nginx
    network_mode: service:app-pause-1
    volumes:
    - config:/config
    - nginx1:/usr/share/nginx/html
  app-2:
    env_file: .env
    image: nginx
    network_mode: service:app-pause-2
    volumes:
    - config:/config
    - nginx2:/usr/share/nginx/html
  app-dp-1:
    command:
    - kuma-dp
    - run
    - --name=app
    - --cp-address=http://kuma-cp-1:5681
    - --dataplane-token-file=/config/farcast1-app-token
    - --log-level=debug
    depends_on:
      kuma-ingress-1:
        condition: service_started
    env_file: .env
    image: letfn/kuma
    network_mode: service:app-pause-1
    volumes:
    - config:/config
  app-dp-2:
    command:
    - kuma-dp
    - run
    - --name=app
    - --cp-address=http://kuma-cp-2:5681
    - --dataplane-token-file=/config/farcast2-app-token
    - --log-level=debug
    depends_on:
      kuma-ingress-2:
        condition: service_started
    env_file: .env
    image: letfn/kuma
    network_mode: service:app-pause-2
    volumes:
    - config:/config
  app-pause-1:
    env_file: .env
    image: gcr.io/google_containers/pause-amd64:3.2
    networks:
      default:
        ipv4_address: 172.29.88.31
  app-pause-2:
    env_file: .env
    image: gcr.io/google_containers/pause-amd64:3.2
    networks:
      default:
        ipv4_address: 172.29.88.32
  cloudflared:
    depends_on:
      zerotier:
        condition: service_started
    env_file: .env
    image: letfn/cloudflared
    network_mode: service:zerotier
    volumes:
    - config:/app/src/.cloudflared
  done:
    depends_on:
    - app-dp-1
    - app-dp-2
    env_file: .env
    image: gcr.io/google_containers/pause-amd64:3.2
  init:
    command:
    - bash
    - -c
    - "set -x\nchown 1001:1001 /var/run/docker.sock\ntouch /tmp/done.txt\nexec sleep\
      \ 86400000\n"
    env_file: .env
    healthcheck:
      interval: 10s
      retries: 100
      test:
      - CMD
      - test
      - -f
      - /tmp/done.txt
      timeout: 15s
    image: letfn/init
    volumes:
    - config:/config
    - /var/run/docker.sock:/var/run/docker.sock
    - zerotier:/zerotier
    - zerotier0:/zerotier0
    - zerotier1:/zerotier1
    - zerotier2:/zerotier2
    - nginx1:/nginx1
    - nginx2:/nginx2
  kuma-cp-1:
    depends_on:
      kuma-global:
        condition: service_started
    entrypoint:
    - kuma-cp
    - run
    env_file: .env
    environment:
    - KUMA_MODE=remote
    - KUMA_MULTICLUSTER_REMOTE_ZONE=farcast1
    - KUMA_MULTICLUSTER_REMOTE_GLOBAL_ADDRESS=grpcs://192.168.195.156:5685
    - KUMA_GENERAL_ADVERTISED_HOSTNAME=kuma-cp-1
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_ENABLED=true
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_INTERFACE=0.0.0.0
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_PORT=5684
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_TLS_CERT_FILE=/certs/server/cert.pem
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_TLS_KEY_FILE=/certs/server/key.pem
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_CLIENT_CERTS_DIR=/certs/client
    - KUMA_STORE_TYPE=postgres
    - KUMA_STORE_POSTGRES_HOST=postgres1
    - KUMA_STORE_POSTGRES_PORT=5432
    - KUMA_STORE_POSTGRES_USER=kuma-user
    - KUMA_STORE_POSTGRES_PASSWORD=kuma-password
    - KUMA_STORE_POSTGRES_DB_NAME=kuma-cp-1
    image: letfn/kuma
    networks:
      default:
        ipv4_address: 172.29.88.21
    volumes:
    - config:/config
  kuma-cp-2:
    depends_on:
      kuma-global:
        condition: service_started
    entrypoint:
    - kuma-cp
    - run
    env_file: .env
    environment:
    - KUMA_MODE=remote
    - KUMA_MULTICLUSTER_REMOTE_ZONE=farcast2
    - KUMA_MULTICLUSTER_REMOTE_GLOBAL_ADDRESS=grpcs://192.168.195.156:5685
    - KUMA_GENERAL_ADVERTISED_HOSTNAME=kuma-cp-2
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_ENABLED=true
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_INTERFACE=0.0.0.0
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_PORT=5684
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_TLS_CERT_FILE=/certs/server/cert.pem
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_TLS_KEY_FILE=/certs/server/key.pem
    - KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_CLIENT_CERTS_DIR=/certs/client
    - KUMA_STORE_TYPE=postgres
    - KUMA_STORE_POSTGRES_HOST=postgres2
    - KUMA_STORE_POSTGRES_PORT=5432
    - KUMA_STORE_POSTGRES_USER=kuma-user
    - KUMA_STORE_POSTGRES_PASSWORD=kuma-password
    - KUMA_STORE_POSTGRES_DB_NAME=kuma-cp-2
    image: letfn/kuma
    networks:
      default:
        ipv4_address: 172.29.88.22
    volumes:
    - config:/config
  kuma-global:
    depends_on:
      init:
        condition: service_healthy
      zerotier:
        condition: service_started
      zerotier0:
        condition: service_started
      zerotier1:
        condition: service_started
      zerotier2:
        condition: service_started
    entrypoint:
    - kuma-cp
    - run
    env_file: .env
    environment:
    - KUMA_MODE=global
    - KUMA_STORE_TYPE=postgres
    - KUMA_STORE_POSTGRES_HOST=postgres0
    - KUMA_STORE_POSTGRES_PORT=5432
    - KUMA_STORE_POSTGRES_USER=kuma-user
    - KUMA_STORE_POSTGRES_PASSWORD=kuma-password
    - KUMA_STORE_POSTGRES_DB_NAME=kuma-global
    image: letfn/kuma
    network_mode: service:zerotier0
    volumes:
    - config:/config
  kuma-ingress-1:
    command:
    - kuma-dp
    - run
    - --name=kuma-ingress
    - --cp-address=http://kuma-cp-1:5681
    - --dataplane-token-file=/config/farcast1-ingress-token
    - --log-level=debug
    depends_on:
      kuma-cp-1:
        condition: service_started
    env_file: .env
    image: letfn/kuma
    network_mode: service:zerotier1
    volumes:
    - config:/config
  kuma-ingress-2:
    command:
    - kuma-dp
    - run
    - --name=kuma-ingress
    - --cp-address=http://kuma-cp-2:5681
    - --dataplane-token-file=/config/farcast2-ingress-token
    - --log-level=debug
    depends_on:
      kuma-cp-2:
        condition: service_started
    env_file: .env
    image: letfn/kuma
    network_mode: service:zerotier2
    volumes:
    - config:/config
  postgres0:
    env_file: .env
    environment:
    - POSTGRES_DB=kuma-global
    image: postgres
    volumes:
    - postgres0:/var/lib/postgresql/data
  postgres1:
    env_file: .env
    environment:
    - POSTGRES_DB=kuma-cp-1
    image: postgres
    volumes:
    - postgres1:/var/lib/postgresql/data
  postgres2:
    env_file: .env
    environment:
    - POSTGRES_DB=kuma-cp-2
    image: postgres
    volumes:
    - postgres2:/var/lib/postgresql/data
  sshd:
    depends_on:
      zerotier:
        condition: service_started
    entrypoint:
    - /service
    - sshd
    env_file: .env
    image: defn/home:jojomomojo
    network_mode: service:zerotier
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - config:/data/home-secret
    - config:/config
    - zerotier:/zerotier
    - zerotier0:/zerotier0
    - zerotier1:/zerotier1
    - zerotier2:/zerotier2
  zerotier:
    cap_drop:
    - NET_RAW
    - NET_ADMIN
    - SYS_ADMIN
    depends_on:
      init:
        condition: service_healthy
    devices:
    - /dev/net/tun
    env_file: .env
    image: letfn/zerotier
    privileged: true
    volumes:
    - zerotier:/var/lib/zerotier-one
  zerotier0:
    cap_drop:
    - NET_RAW
    - NET_ADMIN
    - SYS_ADMIN
    depends_on:
      init:
        condition: service_healthy
    devices:
    - /dev/net/tun
    env_file: .env
    image: letfn/zerotier
    networks:
      default:
        ipv4_address: 172.29.88.10
    privileged: true
    volumes:
    - zerotier0:/var/lib/zerotier-one
  zerotier1:
    cap_drop:
    - NET_RAW
    - NET_ADMIN
    - SYS_ADMIN
    depends_on:
      init:
        condition: service_healthy
    devices:
    - /dev/net/tun
    env_file: .env
    image: letfn/zerotier
    networks:
      default:
        ipv4_address: 172.29.88.11
    privileged: true
    volumes:
    - zerotier1:/var/lib/zerotier-one
  zerotier2:
    cap_drop:
    - NET_RAW
    - NET_ADMIN
    - SYS_ADMIN
    depends_on:
      init:
        condition: service_healthy
    devices:
    - /dev/net/tun
    env_file: .env
    image: letfn/zerotier
    networks:
      default:
        ipv4_address: 172.29.88.12
    privileged: true
    volumes:
    - zerotier2:/var/lib/zerotier-one
version: '3.7'
volumes:
  config: {}
  nginx1: {}
  nginx2: {}
  postgres0: {}
  postgres1: {}
  postgres2: {}
  zerotier: {}
  zerotier0: {}
  zerotier1: {}
  zerotier2: {}
