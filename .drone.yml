---
kind: pipeline
type: docker
name: style

platform:
  os: linux
  arch: amd64

steps:
- name: drone fmt
  image: letfn/drone
  settings:
    task: fmt

- name: drone lint
  image: letfn/drone
  settings:
    task: lint

---
kind: pipeline
type: docker
name: test-sshd

platform:
  os: linux
  arch: amd64

steps:
- name: local
  image: defn/home:sshd
  commands:
    - cd
    - test "/home/$HOMEBOOT" = "$(pwd)"
    - grep "GatewayPorts clientspecified" /etc/ssh/sshd_config
    - test -x "$(which tmux)"
    - test -x "$(which gpg)"
    - test "$HOMEBOOT" = "app"
    - test "$HOMEBOOT" = "$(whoami)"
    - test "$HOMEBOOT" = "$(stat -c '%U' /home/$HOMEBOOT)"

---
kind: pipeline
type: docker
name: test-ssh

platform:
  os: linux
  arch: amd64

steps:
- name: local
  image: defn/home:ssh
  commands:
    - cd
    - test "/home/$HOMEUSER" = "$(pwd)"
    - grep "GatewayPorts clientspecified" /etc/ssh/sshd_config
    - test -x "$(which tmux)"
    - test -x "$(which gpg)"
    - test "$HOMEUSER" = "$(whoami)"
    - test "SUDO_USER=$HOMEUSER" = "$(sudo env | grep $HOMEUSER)"
    - test "$HOMEUSER" = "$(stat -c '%U' /etc/ssh)"
    - test "$HOMEUSER" = "$(stat -c '%U' /run/sshd)"
    - test "$HOMEUSER" = "$(stat -c '%U' /home/$HOMEBOOT)"
    - test "$HOMEUSER" = "$(stat -c '%U' /home/$HOMEUSER)"
    - test "drwx------" = "$(stat -c '%A' .gnupg)"
    - test -f ".gnupg/gpg.conf"
    - find .gnupg/ -ls
    - if test -d boot; then false; fi
    - find /home/* -uid 0 -ls || true
    - find /home/* -gid 0 -ls || true
    - test "" = "$(find /home/* -uid 0 -ls)"

----

kind: pipeline
type: docker
name: test-boot

platform:
  os: linux
  arch: amd64

steps:
- name: local
  image: defn/home:boot
  commands:
    - cd
    - test -x "$(which tmux)"
    - test -x "$(which gpg)"
    - test "/home/$HOMEBOOT" = "$(pwd)"
    - test "$HOMEBOOT" = "$(whoami)"
    - test "$HOMEBOOT" = "$(stat -c '%U' /home/$HOMEBOOT)"
    - if test -d boot; then false; fi
    - find /home/* -uid 0 -ls || true
    - find /home/* -gid 0 -ls || true
    - test "" = "$(find /home/* -uid 0 -ls)"

---
kind: pipeline
type: docker
name: test-jojomomojo

platform:
  os: linux
  arch: amd64

steps:
- name: local
  image: defn/home:jojomomojo
  commands:
    - cd
    - test "/home/$HOMEUSER" = "$(pwd)"
    - grep "GatewayPorts clientspecified" /etc/ssh/sshd_config
    - test -x "$(which tmux)"
    - test -x "$(which gpg)"
    - test "$HOMEUSER" = "$(whoami)"
    - test "SUDO_USER=$HOMEUSER" = "$(sudo env | grep $HOMEUSER)"
    - test "$HOMEUSER" = "$(stat -c '%U' /etc/ssh)"
    - test "$HOMEUSER" = "$(stat -c '%U' /run/sshd)"
    - test "$HOMEUSER" = "$(stat -c '%U' /home/$HOMEBOOT)"
    - test "$HOMEUSER" = "$(stat -c '%U' /home/$HOMEUSER)"
    - test "drwx------" = "$(stat -c '%A' .gnupg)"
    - test -f ".gnupg/gpg.conf"
    - if test -d boot; then false; fi
    - find /home/* -uid 0 -ls || true
    - find /home/* -gid 0 -ls || true
    - test "" = "$(find /home/* -uid 0 -ls)"
    - echo "$TEST_PY" | base64 -d > test.py
    - . /app/venv/bin/activate &&  pytest -v test.py

---
kind: pipeline
type: docker
name: docs

platform:
  os: linux
  arch: amd64

steps:
- name: local
  image: letfn/drone-hugo

...
